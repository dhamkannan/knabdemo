# Define environment
dist: xenial # Ubuntu 16.04
language: bash

# Export variables
env:
  - tf_version=0.14.7 tf_init_cli_options="-input=false" tf_validation_cli_options="" tf_plan_cli_options="-lock=false -input=false" tf_apply_cli_options="-auto-approve -input=false" tf_destroy_cli_options="-auto-approve"

# Install dependencies
before_install:
  - wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
  - unzip -o terraform_"$tf_version"_linux_amd64.zip
  - sudo mv terraform /usr/local/bin/
  - rm terraform_"$tf_version"_linux_amd64.zip
  - envsubst < terraformrc > ~/.terraformrc
  - chmod 400 ansible-playbooks/knab.pem
  - sudo apt-add-repository --yes ppa:ansible/ansible
  - sudo apt --yes update
  - sudo apt install --yes ansible

  # Terraform Plan and Apply
jobs:
  include:
    # - stage: Template Validation
    #   script:
    #     - cd terraform-files
    #     - echo "Validating Terraform fmt"
    #     # - terraform fmt -recursive -check
    #     - echo "creating change plan"
    #     - terraform init $tf_init_cli_options
    #     - terraform validate $tf_validation_cli_options
    #     - terraform plan $tf_plan_cli_options

    - stage: Deploy & configure environment
      script:
        - cd terraform-files
        - echo "Executing changes in Terraform"
        - terraform init $tf_init_cli_options
        - terraform apply $tf_apply_cli_options
        - instanceName=$(terraform state show module.nginx-instance.aws_instance.instance | grep 'ec2-' | awk -F'"' '{print $2}')
        - echo $instanceName >> ../ansible-playbooks/inventory
        - cd ../ansible-playbooks
        - ansible-playbook site.yml -i inventory

    - stage: Validate Post Deployment
      script:
        - python validateURL.py $instanceName