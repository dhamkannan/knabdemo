# Define environment
dist: xenial # Ubuntu 16.04
language: bash

# Export variables
env:
  - tf_version=0.14.7 tf_init_cli_options="-input=false" tf_validation_cli_options="" tf_plan_cli_options="-lock=false -input=false" tf_apply_cli_options="-auto-approve -input=false" tf_destroy_cli_options="-auto-approve"

# Install dependencies
before_install:
  - wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
  - unzip -o terraform_"$tf_version"_linux_amd64.zip
  - sudo mv terraform /usr/local/bin/
  - rm terraform_"$tf_version"_linux_amd64.zip
  - envsubst < terraformrc > ~/.terraformrc
  - chmod 400 ansible-playbooks/knab.pem
  - sudo echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main" >> /etc/apt/sources.list
  - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367
  - sudo apt-get update
  - sudo apt install --yes ansible

  # Terraform Plan and Apply
# Plan only on pull requests, Apply on merged code
jobs:
  include:
    # - stage: Terraform plan
    #   script:
    #     - ls -ltr
    #     - chmod 777 -r ansible-playbooks
    #     - ls -ltr
    #     - cd terraform-files
    #     - echo "Validating Terraform fmt"
    #     - terraform fmt -recursive -check
    #     - echo "creating change plan"
    #     - terraform init $tf_init_cli_options
    #     - terraform validate $tf_validation_cli_options
    #     - terraform plan $tf_plan_cli_options

    - stage: Terraform apply
      script:
        - cd terraform-files
        - echo "Executing changes in Terraform"
        - terraform init $tf_init_cli_options
        - terraform taint output.aws_instance_public_dns
        - terraform apply $tf_apply_cli_options | tee output.txt
        - cat output.txt | grep 'ec2-' | awk -F'"' '{print $2}' >> ../ansible-playbooks/inventory
        - cat ../ansible-playbooks/inventory
        - cd ../ansible-playbooks
        - ansible-playbook site.yml -i inventory